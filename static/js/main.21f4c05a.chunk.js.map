{"version":3,"sources":["Components/Buttons.jsx","Components/Display.jsx","App.js","index.js"],"names":["Buttons","state","className","onClick","props","onclick1","value","style","backgroundColor","this","bgcolor","color","name","Component","digits","operators","Display","processDigit","newKeyValue","displayValue","waitingForOperand","setState","clearAll","newDisplayValue","processOperator","operator","firstOperand","newOperator","stringToEvaluate","evaluate","e","processPoint","needPoint","indexOf","processPercentage","parseFloat","processPlusMinusToggle","processClear","processFunctionKey","processUnknownKey","handleClick","processNewKey","isDigit","includes","isOperator","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.21f4c05a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Buttons.css\";\n\nclass Buttons extends Component {\n  state = {};\n  render() {\n    return (\n      <button className=\"button\"\n        onClick={() => this.props.onclick1(this.props.value)}\n        style={{ backgroundColor: this.props.bgcolor, color: this.props.color }}\n      >\n        {this.props.name}\n      </button>\n    );\n  }\n}\n\nexport default Buttons;\n","import React, { Component } from \"react\";\nimport \"./Display.css\";\nimport Buttons from \"./Buttons\";\nimport { evaluate } from \"mathjs\";\n\nconst digits = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"];\nconst operators = [\"/\", \"*\", \"-\", \"+\", \"=\"];\n\nclass Display extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      displayValue: \"0\",\n      operator: null,\n      waitingForOperand: false,\n      firstOperand: \"0\",\n      clearAll: true,\n    };\n  }\n\n  processDigit = (newKeyValue) => {\n    const { displayValue, waitingForOperand } = this.state;\n\n    if (waitingForOperand) {\n      this.setState({\n        displayValue: newKeyValue,\n        waitingForOperand: false,\n        clearAll: false,\n      });\n    } else {\n      let newDisplayValue =\n        displayValue === \"0\" ? newKeyValue : `${displayValue}${newKeyValue}`;\n      this.setState({\n        displayValue: newDisplayValue,\n        waitingForOperand: false,\n        clearAll: false,\n      });\n    }\n  };\n\n  processOperator = (newKeyValue) => {\n    const {\n      displayValue,\n      operator,\n      waitingForOperand,\n      firstOperand,\n    } = this.state;\n    let newDisplayValue = null;\n    let newOperator = null;\n    let stringToEvaluate = null;\n\n    if (firstOperand === \"0\" || operator == null || waitingForOperand) {\n      this.setState({\n        waitingForOperand: true,\n        firstOperand: displayValue,\n        operator: newKeyValue,\n        clearAll: false,\n      });\n      return;\n    } else {\n      stringToEvaluate = `${firstOperand}${operator}${displayValue}`;\n      try {\n        newDisplayValue = evaluate(stringToEvaluate);\n      } catch (e) {\n        newDisplayValue = \"0\";\n      }\n      if (newDisplayValue === \"Infinity\") {\n        newDisplayValue = \"0\";\n      }\n      newOperator = newKeyValue === \"=\" ? null : newKeyValue;\n      this.setState({\n        displayValue: newDisplayValue,\n        waitingForOperand: true,\n        firstOperand: newDisplayValue,\n        operator: newOperator,\n        clearAll: false,\n      });\n    }\n  };\n\n  processPoint = (newKeyValue) => {\n    const { displayValue, waitingForOperand } = this.state;\n    const needPoint = displayValue.indexOf(\".\") === -1 ? true : false;\n    let newDisplayValue = null;\n\n    if (waitingForOperand) {\n      this.setState({\n        displayValue: \"0.\",\n        waitingForOperand: false,\n        clearAll: false,\n      });\n    } else {\n      if (needPoint) {\n        newDisplayValue = `${displayValue}${newKeyValue}`;\n        this.setState({\n          displayValue: newDisplayValue,\n          waitingForOperand: false,\n          clearAll: false,\n        });\n      }\n    }\n  };\n\n  processPercentage = (newKeyValue) => {\n    const { displayValue } = this.state;\n    const newDisplayValue = parseFloat(displayValue) / 100;\n    this.setState({\n      displayValue: newDisplayValue,\n      waitingForOperand: false,\n      clearAll: false,\n    });\n  };\n\n  processPlusMinusToggle = (newKeyValue) => {\n    const { displayValue } = this.state;\n    this.setState({\n      displayValue: parseFloat(displayValue) * -1,\n      waitingForOperand: false,\n    });\n  };\n\n  processClear = () => {\n    this.setState({\n      displayValue: \"0\",\n      firstOperand: \"0\",\n      operator: null,\n      waitingForOperand: false,\n      clearAll: true,\n    });\n  };\n\n  processFunctionKey = (newKeyValue) => {\n    switch (newKeyValue) {\n      case \"AC\":\n        this.processClear(newKeyValue);\n        break;\n      case \"+/-\":\n        this.processPlusMinusToggle(newKeyValue);\n        break;\n      case \".\":\n        this.processPoint(newKeyValue);\n        break;\n      case \"%\":\n        this.processPercentage(newKeyValue);\n        break;\n      default:\n        this.processUnknownKey(newKeyValue);\n    }\n  };\n\n  handleClick = (value) => {\n    this.processNewKey(value);\n  };\n\n  processNewKey = (newKeyValue) => {\n    const isDigit = digits.includes(newKeyValue);\n    const isOperator = operators.includes(newKeyValue);\n\n    if (isDigit) {\n      this.processDigit(newKeyValue);\n    } else {\n      if (isOperator) {\n        this.processOperator(newKeyValue);\n      } else {\n        this.processFunctionKey(newKeyValue);\n      }\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"container-fluid\">\n        <div className=\"display\">\n          <div className=\"result\">{this.state.displayValue}</div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-sm-3 col-md-3 col-lr-3 row1\">\n            <Buttons name=\"AC\" value=\"AC\" onclick1={this.handleClick} />\n          </div>\n          <div className=\"col-sm- row1 col-md-3 col-lr-3 row1\">\n            <Buttons name=\"+/-\" value=\"+/-\" onclick1={this.handleClick} />\n          </div>\n          <div className=\"col-sm-3 col-md-3 col-lr-3 row1\">\n            <Buttons name=\"%\" value=\"%\" onclick1={this.handleClick} />\n          </div>\n          <div className=\"col-sm-3 col-md-3 col-lr-3 row1\">\n            <Buttons\n              name=\"÷\"\n              value=\"/\"\n              color=\"white\"\n              onclick1={this.handleClick}\n              bgcolor=\"#F5923E\"\n            />\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-sm-3 col-md-3 col-lr-3 row1\">\n            <Buttons name=\"7\" value=\"7\" onclick1={this.handleClick} />\n          </div>\n          <div className=\"col-sm- row1 col-md-3 col-lr-3 row1\">\n            <Buttons name=\"8\" value=\"8\" onclick1={this.handleClick} />\n          </div>\n          <div className=\"col-sm-3 col-md-3 col-lr-3 row1\">\n            <Buttons name=\"9\" value=\"9\" onclick1={this.handleClick} />\n          </div>\n          <div className=\"col-sm-3 col-md-3 col-lr-3 row1\">\n            <Buttons\n              name=\"x\"\n              value=\"*\"\n              color=\"white\"\n              onclick1={this.handleClick}\n              bgcolor=\"#F5923E\"\n            />\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-sm-3 col-md-3 col-lr-3 row1\">\n            <Buttons name=\"4\" value=\"4\" onclick1={this.handleClick} />\n          </div>\n          <div className=\"col-sm- row1 col-md-3 col-lr-3 row1\">\n            <Buttons name=\"5\" value=\"5\" onclick1={this.handleClick} />\n          </div>\n          <div className=\"col-sm-3 col-md-3 col-lr-3 row1\">\n            <Buttons name=\"6\" value=\"6\" onclick1={this.handleClick} />\n          </div>\n          <div className=\"col-sm-3 col-md-3 col-lr-3 row1\">\n            <Buttons\n              name=\"-\"\n              color=\"white\"\n              value=\"-\"\n              onclick1={this.handleClick}\n              bgcolor=\"#F5923E\"\n            />\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-sm-3 col-md-3 col-lr-3 row1\">\n            <Buttons name=\"1\" value=\"1\" onclick1={this.handleClick} />\n          </div>\n          <div className=\"col-sm- row1 col-md-3 col-lr-3 row1\">\n            <Buttons name=\"2\" value=\"2\" onclick1={this.handleClick} />\n          </div>\n          <div className=\"col-sm-3 col-md-3 col-lr-3 row1\">\n            <Buttons name=\"3\" value=\"3\" onclick1={this.handleClick} />\n          </div>\n          <div className=\"col-sm-3 col-md-3 col-lr-3 row1\">\n            <Buttons\n              name=\"+\"\n              value=\"+\"\n              color=\"white\"\n              onclick1={this.handleClick}\n              bgcolor=\"#F5923E\"\n            />\n          </div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col-sm-6 col-md-6 col-lr-6 row2\">\n            <Buttons name=\"0\" value=\"0\" onclick1={this.handleClick} />\n          </div>\n          <div className=\"col-sm-3 col-md-3 col-lr-3 row1\">\n            <Buttons name=\".\" value=\".\" onclick1={this.handleClick} />\n          </div>\n          <div className=\"col-sm-3 col-md-3 col-lr-3 row1\">\n            <Buttons\n              name=\"=\"\n              color=\"white\"\n              value=\"=\"\n              onclick1={this.handleClick}\n              bgcolor=\"#F5923E\"\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Display;\n","import './App.css';\nimport Display from './Components/Display';\n\n\nfunction App() {\n  return (\n    <div>\n      <Display />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}